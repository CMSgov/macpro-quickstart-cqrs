
service: bigmac

package:
  individually: true

plugins:
  - serverless-bundle
  - serverless-dotenv-plugin
  - serverless-plugin-scripts
provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  stage: dev

custom:
  stage: ${opt:stage, self:provider.stage}
  ssmParameterPath: /bigmac-config-${self:custom.stage}/mskConfigurationArn
  mskConfigurationArn: ${ssm:${self:custom.ssmParameterPath}}
  mskSsmPathPrefix: /bigmac-${self:custom.stage}
  vpcId: ${env:VPC_ID}
  subnets:
    - ${env:PRIVATE_SUBNET_ID_1}
    - ${env:PRIVATE_SUBNET_ID_2}
    - ${env:PRIVATE_SUBNET_ID_3}
  scripts:
    hooks:
      deploy:finalize: |
        serverless invoke --stage ${self:custom.stage} --function publishMskInfoToSsm
  iamPath: ${env:IAM_PATH, "/"}

functions:
  publishMskInfoToSsm:
    handler: handlers/publishMskInfoToSsm.handler
    maximumRetryAttempts: 2
    role: LambdaPublishMskInfoToSsmRole
    environment:
      mskSsmPathPrefix: ${self:custom.mskSsmPathPrefix}
      clusterName: ${self:custom.stage}-msk

resources:
  Conditions:
    BuildProdInfrastructure:
      Fn::Equals:
        - ${env:INFRASTRUCTURE_TYPE, ""}
        - "production"
    CreatePermissionsBoundary:
      Fn::Not:
        - Fn::Equals:
          - ""
          - ${env:IAM_PERMISSIONS_BOUNDARY_POLICY, ""}
  Resources:
    MskSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Open port 2181 on msk
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 2181
            ToPort: 2181
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 9094
            ToPort: 9094
            CidrIp: 0.0.0.0/0
        VpcId: ${self:custom.vpcId}
    MskCluster:
      Type: AWS::MSK::Cluster
      Properties:
        BrokerNodeGroupInfo:
          ClientSubnets:
            ${self:custom.subnets}
          InstanceType:
            Fn::If:
              - BuildProdInfrastructure
              - kafka.m5.large
              - kafka.t3.small
          SecurityGroups:
            - Ref: MskSecurityGroup
        ClusterName: ${self:custom.stage}-msk
        ConfigurationInfo:
          Arn: ${self:custom.mskConfigurationArn}
          Revision: 1
        EncryptionInfo:
          EncryptionInTransit:
            ClientBroker: TLS
            InCluster: true
        EnhancedMonitoring: DEFAULT
        KafkaVersion: '2.4.1.1'
        NumberOfBrokerNodes: 3
    LambdaPublishMskInfoToSsmRole: # Why isn't this with the function as an iamRoleStatements?  https://github.com/serverless/serverless/issues/6485
      Type: 'AWS::IAM::Role'
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'
        Path: ${self:custom.iamPath}
        PermissionsBoundary:
          Fn::If:
            - CreatePermissionsBoundary
            - Fn::Join:
              - ''
              -
                - 'arn:aws:iam::'
                - Ref: AWS::AccountId
                - ':policy'
                - '${env:IAM_PERMISSIONS_BOUNDARY_POLICY, ""}'
            - Ref: AWS::NoValue
        Policies:
          - PolicyName: LambdaRolePolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
              - Effect: Allow
                Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - kafka:ListClusters
                  - kafka:GetBootstrapBrokers
                Resource: '*'
              - Effect: Allow
                Action:
                  - ssm:PutParameter
                Resource:
                  Fn::Join:
                    - ''
                    -
                      - 'arn:aws:ssm:'
                      - Ref: AWS::Region
                      - ':'
                      - Ref: AWS::AccountId
                      - ':parameter'
                      - ${self:custom.mskSsmPathPrefix}/*
  Outputs:
    MskClusterArn:
      Value:
        Ref: MskCluster
