
service: bigmac-config
package:
  individually: true

plugins:
  - serverless-bundle
  - serverless-dotenv-plugin
  - serverless-plugin-scripts
provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  stage: dev

custom:
  stage: ${opt:stage, self:provider.stage}
  ssmParameterPath: /bigmac-config-${self:custom.stage}/mskConfigurationArn
  scripts:
    hooks:
      deploy:finalize: |
        serverless invoke --stage ${self:custom.stage} --function createMskConfiguration
        serverless invoke --stage ${self:custom.stage} --function createSsmParameter
  iamPath: ${env:IAM_PATH, "/"}

functions:
  createMskConfiguration:
    handler: handlers/createMskConfiguration.handler
    maximumRetryAttempts: 2
    role: LambdaManageMskConfigurationRole
    environment:
      mskConfigurationNamePrefix: ${self:custom.stage}-msk-config
  createSsmParameter:
    handler: handlers/createSsmParameter.handler
    maximumRetryAttempts: 2
    role: LambdaManageMskConfigurationRole
    environment:
      mskConfigurationNamePrefix: ${self:custom.stage}-msk-config
      ssmParameterPath: ${self:custom.ssmParameterPath}

resources:
  Conditions:
    CreatePermissionsBoundary:
      Fn::Not:
        - Fn::Equals:
          - ""
          - ${env:IAM_PERMISSIONS_BOUNDARY_POLICY, ""}
  Resources:
    LambdaManageMskConfigurationRole: # Why isn't this with the function as an iamRoleStatements?  https://github.com/serverless/serverless/issues/6485
      Type: 'AWS::IAM::Role'
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'
        Path: ${self:custom.iamPath}
        PermissionsBoundary:
          Fn::If:
            - CreatePermissionsBoundary
            - Fn::Join:
              - ''
              -
                - 'arn:aws:iam::'
                - Ref: AWS::AccountId
                - ':policy'
                - '${env:IAM_PERMISSIONS_BOUNDARY_POLICY, ""}'
            - Ref: AWS::NoValue
        Policies:
          - PolicyName: LambdaRolePolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
              - Effect: Allow
                Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - kafka:ListConfigurations
                  - kafka:CreateConfiguration
                Resource: '*'
              - Effect: Allow
                Action:
                  - ssm:PutParameter
                Resource:
                  Fn::Join:
                    - ''
                    -
                      - 'arn:aws:ssm:'
                      - Ref: AWS::Region
                      - ':'
                      - Ref: AWS::AccountId
                      - ':parameter'
                      - ${self:custom.ssmParameterPath}
